 ## Because it’s a composite action we don’t specify a runner so we need to add the shell parameter to each run action. 
 ## If you don’t do it you will have this kind of error message: Required property is missing: shell.
name: "Build dotnet"
description: "Build dotnet..."
inputs:
  dotnet-version:
    description: 'The dotnet version to use'
    default: '8.x.x'
    required: true
  project-path:
    description: 'The path to the project/solution'
    required: true
  unittest-project-path:  
    description: 'The ptah to the unit test project' 
    required: false
runs:
  using: "composite" 
  steps: 
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        cache: true
        
    # You can test your matrix by printing the current dotnet version
    - name: Display dotnet version
      run: dotnet --version
      shell: bash
      
    - run: dotnet restore ${{ inputs.project-path }}
      shell: bash

    - run: dotnet build --configuration Release --no-restore ${{ inputs.project-path }} 
      shell: bash

    # Add coverlet.collector nuget package to test project - 'dotnet add <TestProject.cspoj> package coverlet
    - name: Test
      run: dotnet test ${{ inputs.unittest-project-path }} --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      shell: bash

    - name: List directories and files
      run: |
        echo "List of directories:"
        find . -type d -not -path './.git*' -not -path './node_modules*'
        echo "List of files:"
        find . -type f -not -path './.git*' -not -path './node_modules*'
      shell: bash 
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        format: markdown
        output: both

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Write to Job Summary
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY 
      shell: bash
